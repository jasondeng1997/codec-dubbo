// Code generated by thriftgo (0.2.12). DO NOT EDIT.

package echo

import (
	"context"
	"fmt"
)

type EchoRequest struct {
	Int32 int32 `thrift:"int32,1,required" frugal:"1,required,i32" json:"int32"`
}

func NewEchoRequest() *EchoRequest {
	return &EchoRequest{}
}

func (p *EchoRequest) GetInt32() (v int32) {
	return p.Int32
}
func (p *EchoRequest) SetInt32(val int32) {
	p.Int32 = val
}

func (p *EchoRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EchoRequest(%+v)", *p)
}

type EchoResponse struct {
	Int32 int32 `thrift:"int32,1,required" frugal:"1,required,i32" json:"int32"`
}

func NewEchoResponse() *EchoResponse {
	return &EchoResponse{}
}

func (p *EchoResponse) GetInt32() (v int32) {
	return p.Int32
}
func (p *EchoResponse) SetInt32(val int32) {
	p.Int32 = val
}

func (p *EchoResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EchoResponse(%+v)", *p)
}

type TestService interface {
	EchoInt(ctx context.Context, req int32) (r int32, err error)

	EchoBool(ctx context.Context, req bool) (r bool, err error)

	EchoByte(ctx context.Context, req int8) (r int8, err error)

	EchoInt16(ctx context.Context, req int16) (r int16, err error)

	EchoInt32(ctx context.Context, req int32) (r int32, err error)

	EchoInt64(ctx context.Context, req int64) (r int64, err error)

	EchoDouble(ctx context.Context, req float64) (r float64, err error)

	EchoString(ctx context.Context, req string) (r string, err error)

	EchoBinary(ctx context.Context, req []byte) (r []byte, err error)

	Echo(ctx context.Context, req *EchoRequest) (r *EchoResponse, err error)

	EchoBoolList(ctx context.Context, req []bool) (r []bool, err error)

	EchoByteList(ctx context.Context, req []int8) (r []int8, err error)

	EchoInt16List(ctx context.Context, req []int16) (r []int16, err error)

	EchoInt32List(ctx context.Context, req []int32) (r []int32, err error)

	EchoInt64List(ctx context.Context, req []int64) (r []int64, err error)

	EchoDoubleList(ctx context.Context, req []float64) (r []float64, err error)

	EchoStringList(ctx context.Context, req []string) (r []string, err error)

	EchoBinaryList(ctx context.Context, req [][]byte) (r [][]byte, err error)
}
